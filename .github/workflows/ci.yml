name: CI - Client Spec Compliance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.10"]  # CLIENT SPEC Line 304: Python fixed at 3.10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio
          pip install ruff mypy bandit safety pip-audit
          pip install cyclonedx-bom
      
      - name: Lint with ruff
        run: |
          ruff check app/ --output-format=github
        continue-on-error: false
      
      - name: Type check with mypy (strict mode)
        run: |
          mypy --strict --ignore-missing-imports app/
        continue-on-error: true  # Allow to proceed but flag errors
      
      - name: Dead code detection with vulture
        run: |
          pip install vulture
          vulture app/ --min-confidence 80
        continue-on-error: true
      
      - name: Security scan with bandit
        run: |
          bandit -r app/ -f json -o bandit-report.json
          bandit -r app/ --severity-level medium
        continue-on-error: true
      
      - name: Dependency security check
        run: |
          safety check --json || true
          pip-audit --desc || true
        continue-on-error: true
      
      - name: Run tests with coverage
        run: |
          pytest tests/ \
            --cov=app \
            --cov-report=xml \
            --cov-report=term \
            --cov-report=html \
            --cov-fail-under=90 \
            -v
        continue-on-error: false
      
      - name: Generate SBOM
        run: |
          cyclonedx-py -o sbom.json
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: ci-artifacts-${{ matrix.python-version }}
          path: |
            coverage.xml
            htmlcov/
            sbom.json
            bandit-report.json
      
      - name: Check coverage threshold
        run: |
          coverage report --fail-under=90

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

